#include <bits/stdc++.h> 
#include <stdlib.h>
using namespace std;

#define tam 50

struct elemento{
	string valor;
}typedef elemento;

struct tabelaHash{
	elemento* tabela[tam];
}typedef tabelaHash;

tabelaHash* criaHash();
int valorHash(int *chave)
void inserir_(tabelaHash *th);
elemento busca_(tabelaHash *th, string *valor); //O(k)
void imprimir(tabelaHsh* th)

//função criaHash
tabelaHash* criaHash(){
	tabelaHash* th = (tabelaHash*) malloc(sizeof(tabelaHash));
	for(int i=0; i<tam; i++){
		th->tabela[i]=NULL;
	}
	return th;
}
//valor hash
int valorHash(int *chave){
	int vh=0;
	for(int i=0;chave[i]!='\0'; i++){
		vh=(vh*3+chave[i])%10;
	}
	return vt;
}
//inserir elemento
void inserir(tabelaHash*th, string *valor){
	int vh=valorHash(valor);
	elemento *novo = (elemento*) malloc(sizeof (elemento));
	strcpy(novo->valor, valor);
	novo->prox=th->tabela[vh];
	th->tabela[vh]=novo;
}
elemento busca(tabelaHash *th, string *valor){
	int vh = valorHash(valor);
	elemento *atual = th->tabela[vh];
	while(atual != NUll){
		if(strucmp(atual->valor, valor)==0)
		return atual;
		atual=atual->prox;
	}
	return NUll;
}
