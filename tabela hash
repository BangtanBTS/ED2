#include <bits/stdc++.h> 
#include <stdlib.h>
using namespace std;

struct dados{
	int info;
	float valor;
};

struct hashh{
	int qtd, tamanho;
	struct dados **itens;
};

typedef struct hashh Hash; 

Hash* criaHash(int size);
void liberaHash(Hash*ha);
int insere_SemColisao(Hash* ha, struct dados d);
int busca_SemColisao(Hash* ha, int info, struct dados* d);
int insere_EndAberto(Hash* ha, struct dados d);
int busca_EndAberto(Hash* ha, int info, struct dados* d);

//função criaHash (int size)
Hash* criaHash (int size){
	Hash* ha = (Hash*) malloc (sizeof (Hash) );
	if (ha != NULL){
		int i;
		ha->size = size;
		ha->itens = (struct dados**) malloc (size * sizeof(struct dados*));
		if (ha->itens == NULL) {
			free (ha);
			return NULL;
		}
		ha->qtd = 0;
		for (i=0; i < ha->size; i++) ha->itens [i]= NULL;
	}
	return ha;
}
